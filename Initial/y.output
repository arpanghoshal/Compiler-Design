Grammar

    0 $accept: S $end

    1 S: program

    2 program: HASH INCLUDE '<' libraries '>' program
    3        | HASH INCLUDE HEADER_LITERAL program
    4        | translation_unit

    5 translation_unit: ext_dec
    6                 | translation_unit ext_dec

    7 ext_dec: declaration
    8        | function_definition

    9 libraries: STDIO
   10          | STDLIB
   11          | MATH
   12          | STRING
   13          | TIME

   14 compound_statement: '{' '}'
   15                   | '{' block_item_list '}'

   16 block_item_list: block_item
   17                | block_item_list block_item

   18 block_item: declaration
   19           | statement
   20           | function_call ';'
   21           | RETURN expression_statement
   22           | printstat ';'

   23 printstat: PRINT '(' STRING_LITERAL ')'
   24          | PRINT '(' STRING_LITERAL ',' expression ')'

   25 declaration: type_specifier init_declarator_list ';'

   26 statement: compound_statement
   27          | expression_statement
   28          | iteration_statement
   29          | conditional_statement

   30 iteration_statement: FOR '(' expression_statement expression_statement ')' statement
   31                    | FOR '(' expression_statement expression_statement expression ')' statement
   32                    | FOR '(' declaration expression_statement ')' statement
   33                    | FOR '(' declaration expression_statement expression ')' statement
   34                    | WHILE '(' conditional_expression ')' statement

   35 conditional_statement: IF '(' conditional_expression ')' statement
   36                      | IF '(' conditional_expression ')' compound_statement ELSE compound_statement

   37 type_specifier: VOID
   38               | CHAR
   39               | INT
   40               | FLOAT

   41 init_declarator_list: init_declarator
   42                     | init_declarator_list ',' init_declarator

   43 init_declarator: IDENTIFIER '=' assignment_expression
   44                | IDENTIFIER

   45 assignment_expression: conditional_expression
   46                      | unary_expression assignment_operator assignment_expression

   47 assignment_operator: '='
   48                    | ADD_ASSIGN
   49                    | SUB_ASSIGN
   50                    | MUL_ASSIGN
   51                    | DIV_ASSIGN
   52                    | MOD_ASSIGN

   53 conditional_expression: equality_expression
   54                       | equality_expression '?' expression ':' conditional_expression

   55 expression_statement: ';'
   56                     | expression ';'

   57 expression: assignment_expression
   58           | expression ',' assignment_expression

   59 primary_expression: IDENTIFIER
   60                   | INTEGER_LITERAL
   61                   | FLOAT_LITERAL
   62                   | CHARACTER_LITERAL
   63                   | '(' expression ')'

   64 postfix_expression: primary_expression
   65                   | postfix_expression INC_OP
   66                   | postfix_expression DEC_OP

   67 unary_expression: postfix_expression
   68                 | unary_operator unary_expression

   69 unary_operator: '+'
   70               | '-'
   71               | '!'
   72               | '~'
   73               | "INC_OP"
   74               | "DEC_OP"

   75 equality_expression: relational_expression
   76                    | equality_expression EQ_OP relational_expression
   77                    | equality_expression NE_OP relational_expression

   78 relational_expression: additive_expression
   79                      | relational_expression '<' additive_expression
   80                      | relational_expression '>' additive_expression
   81                      | relational_expression LE_OP additive_expression
   82                      | relational_expression GE_OP additive_expression

   83 additive_expression: multiplicative_expression
   84                    | additive_expression '+' multiplicative_expression
   85                    | additive_expression '-' multiplicative_expression

   86 multiplicative_expression: unary_expression
   87                          | multiplicative_expression '*' unary_expression
   88                          | multiplicative_expression '/' unary_expression
   89                          | multiplicative_expression '%' unary_expression

   90 function_definition: type_specifier declarator compound_statement
   91                    | declarator compound_statement

   92 function_call: declarator '(' identifier_list ')'
   93              | declarator '(' ')'

   94 declarator: IDENTIFIER
   95           | declarator '(' parameter_list ')'
   96           | declarator '(' identifier_list ')'
   97           | declarator '(' ')'

   98 parameter_list: parameter_declaration
   99               | parameter_list ',' parameter_declaration

  100 parameter_declaration: type_specifier IDENTIFIER
  101                      | type_specifier

  102 identifier_list: IDENTIFIER
  103                | identifier_list ',' IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'!' (33) 71
'%' (37) 89
'(' (40) 23 24 30 31 32 33 34 35 36 63 92 93 95 96 97
')' (41) 23 24 30 31 32 33 34 35 36 63 92 93 95 96 97
'*' (42) 87
'+' (43) 69 84
',' (44) 24 42 58 99 103
'-' (45) 70 85
'/' (47) 88
':' (58) 54
';' (59) 20 22 25 55 56
'<' (60) 2 79
'=' (61) 43 47
'>' (62) 2 80
'?' (63) 54
'{' (123) 14 15
'}' (125) 14 15
'~' (126) 72
error (256)
HASH (258) 2 3
INCLUDE (259) 2 3
STDIO (260) 9
STDLIB (261) 10
MATH (262) 11
STRING (263) 12
TIME (264) 13
STRING_LITERAL (265) 23 24
HEADER_LITERAL (266) 3
PRINT (267) 23 24
RETURN (268) 21
INTEGER_LITERAL (269) 60
CHARACTER_LITERAL (270) 62
FLOAT_LITERAL (271) 61
IDENTIFIER (272) 43 44 59 94 100 102 103
INC_OP (273) 65
DEC_OP (274) 66
LE_OP (275) 81
GE_OP (276) 82
EQ_OP (277) 76
NE_OP (278) 77
MUL_ASSIGN (279) 50
DIV_ASSIGN (280) 51
MOD_ASSIGN (281) 52
ADD_ASSIGN (282) 48
SUB_ASSIGN (283) 49
CHAR (284) 38
INT (285) 39
FLOAT (286) 40
VOID (287) 37
FOR (288) 30 31 32 33
WHILE (289) 34
IF (290) 35 36
ELSE (291) 36
"INC_OP" (292) 73
"DEC_OP" (293) 74


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
S (58)
    on left: 1, on right: 0
program (59)
    on left: 2 3 4, on right: 1 2 3
translation_unit (60)
    on left: 5 6, on right: 4 6
ext_dec (61)
    on left: 7 8, on right: 5 6
libraries (62)
    on left: 9 10 11 12 13, on right: 2
compound_statement (63)
    on left: 14 15, on right: 26 36 90 91
block_item_list (64)
    on left: 16 17, on right: 15 17
block_item (65)
    on left: 18 19 20 21 22, on right: 16 17
printstat (66)
    on left: 23 24, on right: 22
declaration (67)
    on left: 25, on right: 7 18 32 33
statement (68)
    on left: 26 27 28 29, on right: 19 30 31 32 33 34 35
iteration_statement (69)
    on left: 30 31 32 33 34, on right: 28
conditional_statement (70)
    on left: 35 36, on right: 29
type_specifier (71)
    on left: 37 38 39 40, on right: 25 90 100 101
init_declarator_list (72)
    on left: 41 42, on right: 25 42
init_declarator (73)
    on left: 43 44, on right: 41 42
assignment_expression (74)
    on left: 45 46, on right: 43 46 57 58
assignment_operator (75)
    on left: 47 48 49 50 51 52, on right: 46
conditional_expression (76)
    on left: 53 54, on right: 34 35 36 45 54
expression_statement (77)
    on left: 55 56, on right: 21 27 30 31 32 33
expression (78)
    on left: 57 58, on right: 24 31 33 54 56 58 63
primary_expression (79)
    on left: 59 60 61 62 63, on right: 64
postfix_expression (80)
    on left: 64 65 66, on right: 65 66 67
unary_expression (81)
    on left: 67 68, on right: 46 68 86 87 88 89
unary_operator (82)
    on left: 69 70 71 72 73 74, on right: 68
equality_expression (83)
    on left: 75 76 77, on right: 53 54 76 77
relational_expression (84)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
additive_expression (85)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
multiplicative_expression (86)
    on left: 86 87 88 89, on right: 83 84 85 87 88 89
function_definition (87)
    on left: 90 91, on right: 8
function_call (88)
    on left: 92 93, on right: 20
declarator (89)
    on left: 94 95 96 97, on right: 90 91 92 93 95 96 97
parameter_list (90)
    on left: 98 99, on right: 95 99
parameter_declaration (91)
    on left: 100 101, on right: 98 99
identifier_list (92)
    on left: 102 103, on right: 92 96 103


State 0

    0 $accept: . S $end

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    S                    go to state 7
    program              go to state 8
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 1

    2 program: HASH . INCLUDE '<' libraries '>' program
    3        | HASH . INCLUDE HEADER_LITERAL program

    INCLUDE  shift, and go to state 15


State 2

   94 declarator: IDENTIFIER .

    $default  reduce using rule 94 (declarator)


State 3

   38 type_specifier: CHAR .

    $default  reduce using rule 38 (type_specifier)


State 4

   39 type_specifier: INT .

    $default  reduce using rule 39 (type_specifier)


State 5

   40 type_specifier: FLOAT .

    $default  reduce using rule 40 (type_specifier)


State 6

   37 type_specifier: VOID .

    $default  reduce using rule 37 (type_specifier)


State 7

    0 $accept: S . $end

    $end  shift, and go to state 16


State 8

    1 S: program .

    $default  reduce using rule 1 (S)


State 9

    4 program: translation_unit .
    6 translation_unit: translation_unit . ext_dec

    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 4 (program)

    ext_dec              go to state 17
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 10

    5 translation_unit: ext_dec .

    $default  reduce using rule 5 (translation_unit)


State 11

    7 ext_dec: declaration .

    $default  reduce using rule 7 (ext_dec)


State 12

   25 declaration: type_specifier . init_declarator_list ';'
   90 function_definition: type_specifier . declarator compound_statement

    IDENTIFIER  shift, and go to state 18

    init_declarator_list  go to state 19
    init_declarator       go to state 20
    declarator            go to state 21


State 13

    8 ext_dec: function_definition .

    $default  reduce using rule 8 (ext_dec)


State 14

   91 function_definition: declarator . compound_statement
   95 declarator: declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'

    '{'  shift, and go to state 22
    '('  shift, and go to state 23

    compound_statement  go to state 24


State 15

    2 program: HASH INCLUDE . '<' libraries '>' program
    3        | HASH INCLUDE . HEADER_LITERAL program

    HEADER_LITERAL  shift, and go to state 25
    '<'             shift, and go to state 26


State 16

    0 $accept: S $end .

    $default  accept


State 17

    6 translation_unit: translation_unit ext_dec .

    $default  reduce using rule 6 (translation_unit)


State 18

   43 init_declarator: IDENTIFIER . '=' assignment_expression
   44                | IDENTIFIER .
   94 declarator: IDENTIFIER .

    '='  shift, and go to state 27

    '{'       reduce using rule 94 (declarator)
    '('       reduce using rule 94 (declarator)
    $default  reduce using rule 44 (init_declarator)


State 19

   25 declaration: type_specifier init_declarator_list . ';'
   42 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 28
    ','  shift, and go to state 29


State 20

   41 init_declarator_list: init_declarator .

    $default  reduce using rule 41 (init_declarator_list)


State 21

   90 function_definition: type_specifier declarator . compound_statement
   95 declarator: declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'

    '{'  shift, and go to state 22
    '('  shift, and go to state 23

    compound_statement  go to state 30


State 22

   14 compound_statement: '{' . '}'
   15                   | '{' . block_item_list '}'

    PRINT              shift, and go to state 31
    RETURN             shift, and go to state 32
    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    '}'                shift, and go to state 42
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    block_item_list            go to state 50
    block_item                 go to state 51
    printstat                  go to state 52
    declaration                go to state 53
    statement                  go to state 54
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    type_specifier             go to state 57
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69
    function_call              go to state 70
    declarator                 go to state 71


State 23

   95 declarator: declarator '(' . parameter_list ')'
   96           | declarator '(' . identifier_list ')'
   97           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 72
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ')'         shift, and go to state 73

    type_specifier         go to state 74
    parameter_list         go to state 75
    parameter_declaration  go to state 76
    identifier_list        go to state 77


State 24

   91 function_definition: declarator compound_statement .

    $default  reduce using rule 91 (function_definition)


State 25

    3 program: HASH INCLUDE HEADER_LITERAL . program

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    program              go to state 78
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 26

    2 program: HASH INCLUDE '<' . libraries '>' program

    STDIO   shift, and go to state 79
    STDLIB  shift, and go to state 80
    MATH    shift, and go to state 81
    STRING  shift, and go to state 82
    TIME    shift, and go to state 83

    libraries  go to state 84


State 27

   43 init_declarator: IDENTIFIER '=' . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 86
    conditional_expression     go to state 59
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 28

   25 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 25 (declaration)


State 29

   42 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 87

    init_declarator  go to state 88


State 30

   90 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 90 (function_definition)


State 31

   23 printstat: PRINT . '(' STRING_LITERAL ')'
   24          | PRINT . '(' STRING_LITERAL ',' expression ')'

    '('  shift, and go to state 89


State 32

   21 block_item: RETURN . expression_statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 90
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 33

   69 unary_operator: '+' .

    $default  reduce using rule 69 (unary_operator)


State 34

   70 unary_operator: '-' .

    $default  reduce using rule 70 (unary_operator)


State 35

   60 primary_expression: INTEGER_LITERAL .

    $default  reduce using rule 60 (primary_expression)


State 36

   62 primary_expression: CHARACTER_LITERAL .

    $default  reduce using rule 62 (primary_expression)


State 37

   61 primary_expression: FLOAT_LITERAL .

    $default  reduce using rule 61 (primary_expression)


State 38

   59 primary_expression: IDENTIFIER .
   94 declarator: IDENTIFIER .

    '('       reduce using rule 94 (declarator)
    $default  reduce using rule 59 (primary_expression)


State 39

   30 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
   31                    | FOR . '(' expression_statement expression_statement expression ')' statement
   32                    | FOR . '(' declaration expression_statement ')' statement
   33                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 91


State 40

   34 iteration_statement: WHILE . '(' conditional_expression ')' statement

    '('  shift, and go to state 92


State 41

   35 conditional_statement: IF . '(' conditional_expression ')' statement
   36                      | IF . '(' conditional_expression ')' compound_statement ELSE compound_statement

    '('  shift, and go to state 93


State 42

   14 compound_statement: '{' '}' .

    $default  reduce using rule 14 (compound_statement)


State 43

   55 expression_statement: ';' .

    $default  reduce using rule 55 (expression_statement)


State 44

   63 primary_expression: '(' . expression ')'

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression                 go to state 94
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 45

   71 unary_operator: '!' .

    $default  reduce using rule 71 (unary_operator)


State 46

   72 unary_operator: '~' .

    $default  reduce using rule 72 (unary_operator)


State 47

   73 unary_operator: "INC_OP" .

    $default  reduce using rule 73 (unary_operator)


State 48

   74 unary_operator: "DEC_OP" .

    $default  reduce using rule 74 (unary_operator)


State 49

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 50

   15 compound_statement: '{' block_item_list . '}'
   17 block_item_list: block_item_list . block_item

    PRINT              shift, and go to state 31
    RETURN             shift, and go to state 32
    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    '}'                shift, and go to state 95
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    block_item                 go to state 96
    printstat                  go to state 52
    declaration                go to state 53
    statement                  go to state 54
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    type_specifier             go to state 57
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69
    function_call              go to state 70
    declarator                 go to state 71


State 51

   16 block_item_list: block_item .

    $default  reduce using rule 16 (block_item_list)


State 52

   22 block_item: printstat . ';'

    ';'  shift, and go to state 97


State 53

   18 block_item: declaration .

    $default  reduce using rule 18 (block_item)


State 54

   19 block_item: statement .

    $default  reduce using rule 19 (block_item)


State 55

   28 statement: iteration_statement .

    $default  reduce using rule 28 (statement)


State 56

   29 statement: conditional_statement .

    $default  reduce using rule 29 (statement)


State 57

   25 declaration: type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 87

    init_declarator_list  go to state 19
    init_declarator       go to state 20


State 58

   57 expression: assignment_expression .

    $default  reduce using rule 57 (expression)


State 59

   45 assignment_expression: conditional_expression .

    $default  reduce using rule 45 (assignment_expression)


State 60

   27 statement: expression_statement .

    $default  reduce using rule 27 (statement)


State 61

   56 expression_statement: expression . ';'
   58 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 98
    ','  shift, and go to state 99


State 62

   64 postfix_expression: primary_expression .

    $default  reduce using rule 64 (postfix_expression)


State 63

   65 postfix_expression: postfix_expression . INC_OP
   66                   | postfix_expression . DEC_OP
   67 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 100
    DEC_OP  shift, and go to state 101

    $default  reduce using rule 67 (unary_expression)


State 64

   46 assignment_expression: unary_expression . assignment_operator assignment_expression
   86 multiplicative_expression: unary_expression .

    '='         shift, and go to state 102
    MUL_ASSIGN  shift, and go to state 103
    DIV_ASSIGN  shift, and go to state 104
    MOD_ASSIGN  shift, and go to state 105
    ADD_ASSIGN  shift, and go to state 106
    SUB_ASSIGN  shift, and go to state 107

    $default  reduce using rule 86 (multiplicative_expression)

    assignment_operator  go to state 108


State 65

   68 unary_expression: unary_operator . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 109
    unary_operator      go to state 65


State 66

   53 conditional_expression: equality_expression .
   54                       | equality_expression . '?' expression ':' conditional_expression
   76 equality_expression: equality_expression . EQ_OP relational_expression
   77                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 110
    NE_OP  shift, and go to state 111
    '?'    shift, and go to state 112

    $default  reduce using rule 53 (conditional_expression)


State 67

   75 equality_expression: relational_expression .
   79 relational_expression: relational_expression . '<' additive_expression
   80                      | relational_expression . '>' additive_expression
   81                      | relational_expression . LE_OP additive_expression
   82                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 113
    GE_OP  shift, and go to state 114
    '<'    shift, and go to state 115
    '>'    shift, and go to state 116

    $default  reduce using rule 75 (equality_expression)


State 68

   78 relational_expression: additive_expression .
   84 additive_expression: additive_expression . '+' multiplicative_expression
   85                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118

    $default  reduce using rule 78 (relational_expression)


State 69

   83 additive_expression: multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . '*' unary_expression
   88                          | multiplicative_expression . '/' unary_expression
   89                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 119
    '*'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 83 (additive_expression)


State 70

   20 block_item: function_call . ';'

    ';'  shift, and go to state 122


State 71

   92 function_call: declarator . '(' identifier_list ')'
   93              | declarator . '(' ')'
   95 declarator: declarator . '(' parameter_list ')'
   96           | declarator . '(' identifier_list ')'
   97           | declarator . '(' ')'

    '('  shift, and go to state 123


State 72

  102 identifier_list: IDENTIFIER .

    $default  reduce using rule 102 (identifier_list)


State 73

   97 declarator: declarator '(' ')' .

    $default  reduce using rule 97 (declarator)


State 74

  100 parameter_declaration: type_specifier . IDENTIFIER
  101                      | type_specifier .

    IDENTIFIER  shift, and go to state 124

    $default  reduce using rule 101 (parameter_declaration)


State 75

   95 declarator: declarator '(' parameter_list . ')'
   99 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 125
    ','  shift, and go to state 126


State 76

   98 parameter_list: parameter_declaration .

    $default  reduce using rule 98 (parameter_list)


State 77

   96 declarator: declarator '(' identifier_list . ')'
  103 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 127
    ','  shift, and go to state 128


State 78

    3 program: HASH INCLUDE HEADER_LITERAL program .

    $default  reduce using rule 3 (program)


State 79

    9 libraries: STDIO .

    $default  reduce using rule 9 (libraries)


State 80

   10 libraries: STDLIB .

    $default  reduce using rule 10 (libraries)


State 81

   11 libraries: MATH .

    $default  reduce using rule 11 (libraries)


State 82

   12 libraries: STRING .

    $default  reduce using rule 12 (libraries)


State 83

   13 libraries: TIME .

    $default  reduce using rule 13 (libraries)


State 84

    2 program: HASH INCLUDE '<' libraries . '>' program

    '>'  shift, and go to state 129


State 85

   59 primary_expression: IDENTIFIER .

    $default  reduce using rule 59 (primary_expression)


State 86

   43 init_declarator: IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 43 (init_declarator)


State 87

   43 init_declarator: IDENTIFIER . '=' assignment_expression
   44                | IDENTIFIER .

    '='  shift, and go to state 27

    $default  reduce using rule 44 (init_declarator)


State 88

   42 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 42 (init_declarator_list)


State 89

   23 printstat: PRINT '(' . STRING_LITERAL ')'
   24          | PRINT '(' . STRING_LITERAL ',' expression ')'

    STRING_LITERAL  shift, and go to state 130


State 90

   21 block_item: RETURN expression_statement .

    $default  reduce using rule 21 (block_item)


State 91

   30 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
   31                    | FOR '(' . expression_statement expression_statement expression ')' statement
   32                    | FOR '(' . declaration expression_statement ')' statement
   33                    | FOR '(' . declaration expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    declaration                go to state 131
    type_specifier             go to state 57
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 132
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 92

   34 iteration_statement: WHILE '(' . conditional_expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    conditional_expression     go to state 133
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 93

   35 conditional_statement: IF '(' . conditional_expression ')' statement
   36                      | IF '(' . conditional_expression ')' compound_statement ELSE compound_statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    conditional_expression     go to state 135
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 94

   58 expression: expression . ',' assignment_expression
   63 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 136
    ','  shift, and go to state 99


State 95

   15 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 15 (compound_statement)


State 96

   17 block_item_list: block_item_list block_item .

    $default  reduce using rule 17 (block_item_list)


State 97

   22 block_item: printstat ';' .

    $default  reduce using rule 22 (block_item)


State 98

   56 expression_statement: expression ';' .

    $default  reduce using rule 56 (expression_statement)


State 99

   58 expression: expression ',' . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 137
    conditional_expression     go to state 59
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 100

   65 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 65 (postfix_expression)


State 101

   66 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 66 (postfix_expression)


State 102

   47 assignment_operator: '=' .

    $default  reduce using rule 47 (assignment_operator)


State 103

   50 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 50 (assignment_operator)


State 104

   51 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 51 (assignment_operator)


State 105

   52 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 52 (assignment_operator)


State 106

   48 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 48 (assignment_operator)


State 107

   49 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 49 (assignment_operator)


State 108

   46 assignment_expression: unary_expression assignment_operator . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 138
    conditional_expression     go to state 59
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 109

   68 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 68 (unary_expression)


State 110

   76 equality_expression: equality_expression EQ_OP . relational_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    relational_expression      go to state 139
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 111

   77 equality_expression: equality_expression NE_OP . relational_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    relational_expression      go to state 140
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 112

   54 conditional_expression: equality_expression '?' . expression ':' conditional_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression                 go to state 141
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 113

   81 relational_expression: relational_expression LE_OP . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    additive_expression        go to state 142
    multiplicative_expression  go to state 69


State 114

   82 relational_expression: relational_expression GE_OP . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    additive_expression        go to state 143
    multiplicative_expression  go to state 69


State 115

   79 relational_expression: relational_expression '<' . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    additive_expression        go to state 144
    multiplicative_expression  go to state 69


State 116

   80 relational_expression: relational_expression '>' . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    additive_expression        go to state 145
    multiplicative_expression  go to state 69


State 117

   84 additive_expression: additive_expression '+' . multiplicative_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    multiplicative_expression  go to state 146


State 118

   85 additive_expression: additive_expression '-' . multiplicative_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    multiplicative_expression  go to state 147


State 119

   88 multiplicative_expression: multiplicative_expression '/' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 148
    unary_operator      go to state 65


State 120

   87 multiplicative_expression: multiplicative_expression '*' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 149
    unary_operator      go to state 65


State 121

   89 multiplicative_expression: multiplicative_expression '%' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 150
    unary_operator      go to state 65


State 122

   20 block_item: function_call ';' .

    $default  reduce using rule 20 (block_item)


State 123

   92 function_call: declarator '(' . identifier_list ')'
   93              | declarator '(' . ')'
   95 declarator: declarator '(' . parameter_list ')'
   96           | declarator '(' . identifier_list ')'
   97           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 72
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ')'         shift, and go to state 151

    type_specifier         go to state 74
    parameter_list         go to state 75
    parameter_declaration  go to state 76
    identifier_list        go to state 152


State 124

  100 parameter_declaration: type_specifier IDENTIFIER .

    $default  reduce using rule 100 (parameter_declaration)


State 125

   95 declarator: declarator '(' parameter_list ')' .

    $default  reduce using rule 95 (declarator)


State 126

   99 parameter_list: parameter_list ',' . parameter_declaration

    CHAR   shift, and go to state 3
    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    type_specifier         go to state 74
    parameter_declaration  go to state 153


State 127

   96 declarator: declarator '(' identifier_list ')' .

    $default  reduce using rule 96 (declarator)


State 128

  103 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 154


State 129

    2 program: HASH INCLUDE '<' libraries '>' . program

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    program              go to state 155
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 130

   23 printstat: PRINT '(' STRING_LITERAL . ')'
   24          | PRINT '(' STRING_LITERAL . ',' expression ')'

    ')'  shift, and go to state 156
    ','  shift, and go to state 157


State 131

   32 iteration_statement: FOR '(' declaration . expression_statement ')' statement
   33                    | FOR '(' declaration . expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 158
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 132

   30 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
   31                    | FOR '(' expression_statement . expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 159
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 133

   34 iteration_statement: WHILE '(' conditional_expression . ')' statement

    ')'  shift, and go to state 160


State 134

   86 multiplicative_expression: unary_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 135

   35 conditional_statement: IF '(' conditional_expression . ')' statement
   36                      | IF '(' conditional_expression . ')' compound_statement ELSE compound_statement

    ')'  shift, and go to state 161


State 136

   63 primary_expression: '(' expression ')' .

    $default  reduce using rule 63 (primary_expression)


State 137

   58 expression: expression ',' assignment_expression .

    $default  reduce using rule 58 (expression)


State 138

   46 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 46 (assignment_expression)


State 139

   76 equality_expression: equality_expression EQ_OP relational_expression .
   79 relational_expression: relational_expression . '<' additive_expression
   80                      | relational_expression . '>' additive_expression
   81                      | relational_expression . LE_OP additive_expression
   82                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 113
    GE_OP  shift, and go to state 114
    '<'    shift, and go to state 115
    '>'    shift, and go to state 116

    $default  reduce using rule 76 (equality_expression)


State 140

   77 equality_expression: equality_expression NE_OP relational_expression .
   79 relational_expression: relational_expression . '<' additive_expression
   80                      | relational_expression . '>' additive_expression
   81                      | relational_expression . LE_OP additive_expression
   82                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 113
    GE_OP  shift, and go to state 114
    '<'    shift, and go to state 115
    '>'    shift, and go to state 116

    $default  reduce using rule 77 (equality_expression)


State 141

   54 conditional_expression: equality_expression '?' expression . ':' conditional_expression
   58 expression: expression . ',' assignment_expression

    ','  shift, and go to state 99
    ':'  shift, and go to state 162


State 142

   81 relational_expression: relational_expression LE_OP additive_expression .
   84 additive_expression: additive_expression . '+' multiplicative_expression
   85                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118

    $default  reduce using rule 81 (relational_expression)


State 143

   82 relational_expression: relational_expression GE_OP additive_expression .
   84 additive_expression: additive_expression . '+' multiplicative_expression
   85                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118

    $default  reduce using rule 82 (relational_expression)


State 144

   79 relational_expression: relational_expression '<' additive_expression .
   84 additive_expression: additive_expression . '+' multiplicative_expression
   85                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118

    $default  reduce using rule 79 (relational_expression)


State 145

   80 relational_expression: relational_expression '>' additive_expression .
   84 additive_expression: additive_expression . '+' multiplicative_expression
   85                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118

    $default  reduce using rule 80 (relational_expression)


State 146

   84 additive_expression: additive_expression '+' multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . '*' unary_expression
   88                          | multiplicative_expression . '/' unary_expression
   89                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 119
    '*'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 84 (additive_expression)


State 147

   85 additive_expression: additive_expression '-' multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . '*' unary_expression
   88                          | multiplicative_expression . '/' unary_expression
   89                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 119
    '*'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 85 (additive_expression)


State 148

   88 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 149

   87 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 150

   89 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 89 (multiplicative_expression)


State 151

   93 function_call: declarator '(' ')' .
   97 declarator: declarator '(' ')' .

    '('       reduce using rule 97 (declarator)
    $default  reduce using rule 93 (function_call)


State 152

   92 function_call: declarator '(' identifier_list . ')'
   96 declarator: declarator '(' identifier_list . ')'
  103 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 163
    ','  shift, and go to state 128


State 153

   99 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 99 (parameter_list)


State 154

  103 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 103 (identifier_list)


State 155

    2 program: HASH INCLUDE '<' libraries '>' program .

    $default  reduce using rule 2 (program)


State 156

   23 printstat: PRINT '(' STRING_LITERAL ')' .

    $default  reduce using rule 23 (printstat)


State 157

   24 printstat: PRINT '(' STRING_LITERAL ',' . expression ')'

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression                 go to state 164
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 158

   32 iteration_statement: FOR '(' declaration expression_statement . ')' statement
   33                    | FOR '(' declaration expression_statement . expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    ')'                shift, and go to state 165
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression                 go to state 166
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 159

   30 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
   31                    | FOR '(' expression_statement expression_statement . expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    ')'                shift, and go to state 167
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression                 go to state 168
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 160

   34 iteration_statement: WHILE '(' conditional_expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 169
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 161

   35 conditional_statement: IF '(' conditional_expression ')' . statement
   36                      | IF '(' conditional_expression ')' . compound_statement ELSE compound_statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 170
    statement                  go to state 171
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 162

   54 conditional_expression: equality_expression '?' expression ':' . conditional_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    conditional_expression     go to state 172
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 134
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 163

   92 function_call: declarator '(' identifier_list ')' .
   96 declarator: declarator '(' identifier_list ')' .

    '('       reduce using rule 96 (declarator)
    $default  reduce using rule 92 (function_call)


State 164

   24 printstat: PRINT '(' STRING_LITERAL ',' expression . ')'
   58 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 173
    ','  shift, and go to state 99


State 165

   32 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 174
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 166

   33 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement
   58 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 175
    ','  shift, and go to state 99


State 167

   30 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 176
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 168

   31 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement
   58 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 177
    ','  shift, and go to state 99


State 169

   34 iteration_statement: WHILE '(' conditional_expression ')' statement .

    $default  reduce using rule 34 (iteration_statement)


State 170

   26 statement: compound_statement .
   36 conditional_statement: IF '(' conditional_expression ')' compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 178

    $default  reduce using rule 26 (statement)


State 171

   35 conditional_statement: IF '(' conditional_expression ')' statement .

    $default  reduce using rule 35 (conditional_statement)


State 172

   54 conditional_expression: equality_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 54 (conditional_expression)


State 173

   24 printstat: PRINT '(' STRING_LITERAL ',' expression ')' .

    $default  reduce using rule 24 (printstat)


State 174

   32 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  reduce using rule 32 (iteration_statement)


State 175

   33 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 179
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 176

   30 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 30 (iteration_statement)


State 177

   31 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    FOR                shift, and go to state 39
    WHILE              shift, and go to state 40
    IF                 shift, and go to state 41
    '{'                shift, and go to state 22
    ';'                shift, and go to state 43
    '('                shift, and go to state 44
    '!'                shift, and go to state 45
    '~'                shift, and go to state 46
    "INC_OP"           shift, and go to state 47
    "DEC_OP"           shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 180
    iteration_statement        go to state 55
    conditional_statement      go to state 56
    assignment_expression      go to state 58
    conditional_expression     go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 178

   36 conditional_statement: IF '(' conditional_expression ')' compound_statement ELSE . compound_statement

    '{'  shift, and go to state 22

    compound_statement  go to state 181


State 179

   33 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 33 (iteration_statement)


State 180

   31 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 31 (iteration_statement)


State 181

   36 conditional_statement: IF '(' conditional_expression ')' compound_statement ELSE compound_statement .

    $default  reduce using rule 36 (conditional_statement)
